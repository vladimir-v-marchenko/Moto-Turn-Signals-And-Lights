name: PlatformIO CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '**/*.md'
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - '**/*.md'

# defaults:
#   run:
#     working-directory: ${GITHUB_WORKSPACE}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio/.cache"
            ~/.cache/pip
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install PlatformIO
        run: |
          pip install --upgrade platformio

      # - name: Build firmware
      #   run: |
      #     pio ci --project-conf=platformio.ini src

      - name: Instal wokwi CLI
        run: curl -L https://wokwi.com/ci/install.sh | sh

      - name: Test with Wokwi
        run: |
          set -eu -o pipefail
          pushd ${{ github.workspace }} 2>/dev/null

          for environment in "uno" "nano" "minipro5v" "pro16MHzatmega328" "pro16MHzatmega168" ; do
           echo "::group::$environment::build"
            pio run --environment=${environment} \
                    --project-dir=${{ github.workspace }} \
                    --project-conf=platformio.ini \
                    --jobs=2 \
                    --disable-auto-clean \
                    --verbose
           echo "::endgroup::build"
          
           echo "::group::$environment::check"
            declare -a files=("wokwi-scenario.yaml" "diagram.json" ".pio/build/${environment}/firmware.elf")
            for file in "${files[@]}"; do
              if [ ! -f "$file" ]; then
                echo "File $file not found"
                exit 1
              fi
            done
           echo "::endgroup::build"
            
           echo "::group::$environment::test"
            wokwi-cli --scenario=wokwi-scenario.yaml \
                    --diagram-file=diagram.json \
                    --elf=.pio/build/${environment}/firmware.elf \
                    --serial-log-file=serial.log
           echo "::endgroup::test"
          done
          popd
        env:
          WOKWI_CLI_TOKEN: ${{ secrets.WOKWI_CLI_TOKEN }}
          
        # uses: wokwi/wokwi-ci-action@v1
        # with:
        #   token: ${{ secrets.WOKWI_CLI_TOKEN }}
        #   path: / # directory with wokwi.toml, relative to repo's root
        #   timeout: 10000
        #   scenario: 'wokwi-scenario.yaml'
        #   serial_log_file: 'serial.log'
        #   elf: .pio/build/nano/firmware.elf






